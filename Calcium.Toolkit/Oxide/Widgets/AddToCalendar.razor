@using Calcium.Toolkit.Assets;

@using Microsoft.JSInterop
@inject IJSRuntime JS

@if (Event != null)
{
    <section class="calendar" @attributes=AdditionalAttributes>
        <p class="heading regular">@Event.Heading</p>

        <div class="links">
            <a target="_blank" title="Save Event in my Calendar" class="button secondary-outline-500" href="@Event.GoogleCalendarLink">
                <Calendar Platform="Google" />
            </a>

            <a target="_blank" title="Save Event in my Calendar" class="button secondary-outline-500" href="@Event.OutlookCalendarLink">
                <Calendar Platform="Microsoft" />
            </a>

            <a target="_blank" title="Save Event in my Calendar" class="button secondary-outline-500" href="@Event.Office365CalendarLink">
                <Calendar Platform="Office 365" />
            </a>

            <a target="_blank" title="Save Event in my Calendar" class="button secondary-outline-500" href="@Event.YahooCalendarLink">
                <Calendar Platform="Yahoo" />
            </a>
        </div>

        @if (!string.IsNullOrEmpty(Event.Label)) {
            <div class="with-divider">
                <button type="button" class="button secondary-outline-500" @onclick="DownloadICSFile">@Event.Label</button>
            </div>
        }
    </section>
}

@code {

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter]
    public Calcium.Core.Schema.Widgets.Calendar? Event { get; set; }

    private async Task DownloadICSFile()
    {
        if (JS != null)
        {
            // Get bytearray
            var ics = Event?.CreateICSFileAsByteArray();

            // Call JS function to initiate download
            await JS.InvokeVoidAsync("DOM.FileDownload", "DevelopersConference2025.ics", "text/calendar", ics);
        }
    }
}
