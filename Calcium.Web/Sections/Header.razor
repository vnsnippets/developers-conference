@using System.Text.RegularExpressions
@using System.Linq

@if (Parameters != null)
{
    <section @attributes=AdditionalAttributes class="hero">
        <div class="hero-body">
            <h1 class="title contrast">
                @foreach(var item in Parameters.Title) {
                    <span class="inline-block">
                    @foreach(var token in SplitTokensInString(item))
                    {
                        @RenderFragmentAsStringOrImage(token);
                    }
                    </span>
                }
            </h1>

            @foreach (var line in Parameters.Captions)
            {
                <h3 class="contrast">@line</h3>
            }

            <div class="cta-container">
            @foreach (var cta in Parameters.CTA)
            {
                <a class="button cta @(cta.Type ?? "secondary-400")" href="@cta.URL">
                    <span>@cta.Name</span>
                </a>
            }
            </div>
        </div>

        @ChildContent
    </section>
}

@code {
    [Parameter]
    public Calcium.Core.Schema.Sections.Hero? Parameters { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private string _baseURL = Calcium.Core.Site.ResourcesBaseURL;


    private List<string> SplitTokensInString(string htmlString)
    {
        var pattern = @"#(.*?)#";
        var matches = Regex.Split(htmlString, pattern);

        return new List<string>(matches);
    }

    private RenderFragment RenderFragmentAsStringOrImage(string token)
    {
        var tokenPattern = @"{(.*?)}";
        var match = Regex.Match(token, tokenPattern);

        var subtokens = match.Groups[1].ToString().Split("|");
        var value = subtokens[0].Trim();
        var alt = (subtokens.Count() > 1) ? subtokens[1].Trim() : string.Empty;

        if (match.Success) return @<span class="emoji-inline"><img src="@(_baseURL)/@(value).png" alt="@alt" /></span>  ;
        else return @<span class="inline-text">@token</span>;
    }
}